//#ccc;

/* === TYPOGRAPHY VARIABLES === */
$base-font-size: 1rem;
$base-line-height: 1.25 * $base-font-size;

/* === TYPOGRAPHY MIXINS TEST BUILD COMPILE 3 === */

@import url('https://fonts.googleapis.com/css?family=PT+Mono');

@font-face {
    font-family: "FontAwesome";
    font-weight: normal;
    font-style: normal;
    src: url("https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/fonts/fontawesome-webfont.eot?v=4.3.0");
    src: url("https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/fonts/fontawesome-webfont.eot?#iefix&v=4.3.0") format("embedded-opentype"), url("https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/fonts/fontawesome-webfont.woff2?v=4.3.0") format("woff2"), url("https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/fonts/fontawesome-webfont.woff?v=4.3.0") format("woff"), url("https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/fonts/fontawesome-webfont.ttf?v=4.3.0") format("truetype"), url("https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/fonts/fontawesome-webfont.svg?v=4.3.0#fontawesomeregular") format("svg");
}

/* === TYPOGRAPHY MIXINS === */

$global-fonts: ( primary: #{'Montserrat, serif'}, secondary: #{'Georgia, serif'}, tertiary: #{'Raleway, Tahoma, Helvetica, sans-serif'}, weights: ( light: 100, normal: 300, medium: 500, bold: 700 ) );

$theme-fonts: () !default;

$fonts: non-destructive-map-merge($global-fonts, $theme-fonts);

$global-type-settings: ( -2: ( font-size: 0.75rem, line-height: $base-line-height, letter-spacing: 0.025em ), -1: ( font-size: 0.875rem, line-height: $base-line-height ), 0: ( font-size: 1rem, line-height: $base-line-height ), 1: ( font-size: 1.333rem, line-height: $base-line-height * 2 ), 2: ( font-size: 1.778rem, line-height: $base-line-height * 2 ), 3: ( font-size: 2.369rem, line-height: $base-line-height * 2 ) );

$theme-type-settings: () !default;

$type-settings: non-destructive-map-merge($global-type-settings, $theme-type-settings);

@function type-scale($level) {
    @return map-get( map-get($type-settings, $level), 'font-size');
}

;

@function font($font) {
    @return map-get($fonts, $font);
}

;

@function line-height($level) {
    @return map-get( map-get($type-settings, $level), 'line-height');
}

;

@mixin type-setting($level, $line-height: line-height($level)) {
    font-size: type-scale($level);
    line-height: $line-height;
}

;

@mixin fonts($font, $weight: 'normal', $opacity: 1, $type-scale: null) {
    font-family: map-deep-get($fonts, $font);
    font-weight: map-deep-get($fonts, 'weights', $weight);
    opacity: $opacity;

    @if $type-scale != null {
        @include type-setting($type-scale);
    }
}

;


body, html {
    font-size: 16px !important;
}

